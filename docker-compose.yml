version: '3.8'

services:
  # 字符画转换器后端服务
  char-art-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: char-art-backend
    ports:
      - "8080:8080"
    environment:
      # Redis配置
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DATABASE=0
      - REDIS_TIMEOUT=60000
      # 字符画缓存配置
      - CHAR_ART_CACHE_TTL=3600
      # WebP处理服务配置
      - WEBP_PROCESSOR_URL=http://webp-processor:5000
      - WEBP_PROCESSOR_ENABLED=true
      - WEBP_PROCESSOR_CONNECTION_TIMEOUT=5000
      - WEBP_PROCESSOR_MAX_RETRIES=2
      # 服务器配置
      - SERVER_PORT=8080
      # 上传文件配置
      - MAX_FILE_SIZE=10MB
      - MAX_REQUEST_SIZE=10MB
      # 日志配置
      - LOG_LEVEL=INFO
      # 字符画默认配置
      - DEFAULT_DENSITY=medium
      - DEFAULT_COLOR_MODE=grayscale
    depends_on:
      - redis
      - webp-processor
    restart: unless-stopped
    networks:
      - char-art-network
    volumes:
      - char-art-data:/app/data

  # WebP处理服务
  webp-processor:
    build:
      context: ./python_webp_processor
      dockerfile: Dockerfile
    container_name: webp-processor
    ports:
      - "8081:5000"
    environment:
      # 服务配置
      - PORT=5000
      - LOG_LEVEL=INFO
      - DEBUG=False
      - MAX_CONTENT_LENGTH=16777216
      - TEMP_FILE_TTL=3600
    volumes:
      - webp-processor-data:/app/data
      - webp-processor-logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - char-art-network

  # Redis服务
  redis:
    image: redis:6.2-alpine
    container_name: char-art-redis
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - char-art-network

networks:
  char-art-network:
    driver: bridge

volumes:
  char-art-data:
  webp-processor-data:
  webp-processor-logs:
  redis-data: