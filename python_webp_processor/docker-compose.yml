version: '3.8'

services:
  # WebP处理服务
  webp-processor:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: char-art-webp-processor
    ports:
      - "8081:8081"
    environment:
      # 服务配置
      # - PORT=8081 # 要与暴露接口一致，用于后端访问此容器
      # - LOG_LEVEL=INFO
      # - TEMP_FILE_TTL=3600
      # - DEBUG=False
      # 最大文件大小，单位为字节
      # - MAX_CONTENT_LENGTH=10485760
      # Redis设置
      # - REDIS_HOST=localhost
      # - REDIS_PORT=6379
      # - REDIS_CHANNEL=sse
      # 进度间隔时长
      # - PROGRESS_UPDATE_INTERVAL=0.5
      # Java后端服务URL
      - JAVA_BACKEND_URL=http://localhost:8080
    volumes:
      - webp-processor-data:/app/data
      - webp-processor-logs:/app/logs
    restart: unless-stopped
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - char-art-network
  redis:
      image: redis:6.2-alpine
      container_name: char-art-webp-processor-redis
      command: redis-server --appendonly yes
      volumes:
        - redis-data:/data
      restart: unless-stopped
      networks:
        - char-art-network
networks:
  char-art-network:
    driver: bridge
    # 如果需要与后端服务共用网络，请取消下面的注释并确保网络名称一致
    external: true
    name: char-art-network

volumes:
  webp-processor-data:
  webp-processor-logs:
  redis-data: