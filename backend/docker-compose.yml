services:
  # 字符画转换器后端服务
  char-art-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: char-art-backend
    ports:
      - "8080:8080"
    environment:
      # Redis配置
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      # - REDIS_DATABASE=0
      # - REDIS_TIMEOUT=60000
      # # 字符画缓存配置
      # - CHAR_ART_CACHE_TTL=3600
      # - CHAR_ART_CACHE_DEFAULT_KEY_PREFIX="char-art:text:"
      # WebP处理服务配置
      - WEBP_PROCESSOR_URL=http://webp-processor:8081
      # - WEBP_PROCESSOR_ENABLED=true
      # - WEBP_PROCESSOR_CONNECTION_TIMEOUT=600000
      # - WEBP_PROCESSOR_MAX_RETRIES=2
      # 服务器配置，要与容器暴露的端口一致
      # - SERVER_PORT=8080
      # 上传文件配置
      # - MAX_FILE_SIZE=10MB
      # - MAX_REQUEST_SIZE=10MB
      # - LOG_CHARSET_CONSOLE=UTF-8 \
      # - LOG_CHARSET_FILE=UTF-8 \
      # - TIMEZONE=Asia/Shanghai \
      # - DATETIME_FORMAT=yyyy-MM-dd HH:mm:ss \
      # 日志配置
      # - LOG_LEVEL=INFO
      # - LOG_FILE_MAX_SIZE=10MB
      # - LOG_FILE_MAX_HISTORY=30
      # 字符画默认配置
      # - DEFAULT_DENSITY=medium
      # - DEFAULT_COLOR_MODE=grayscale
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - char-art-network
    volumes:
      - char-art-data:/app/data
      - char-art-logs:/app/logs

  # Redis服务
  redis:
    image: redis:6.2-alpine
    container_name: char-art-backend-redis
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - char-art-network

  # WebP处理服务（可选，如果有外部WebP处理服务，可以注释掉此部分）
  # webp-processor:
  #   image: ../python_webp_processor
  #   container_name: webp-processor
  #   ports:
  #     - "8081:8081"
  #   restart: unless-stopped
  #   networks:
  #     - char-art-network

networks:
  char-art-network:
    driver: bridge
    name: char-art-network
    
volumes:
  char-art-data:
  char-art-logs:
  redis-data: